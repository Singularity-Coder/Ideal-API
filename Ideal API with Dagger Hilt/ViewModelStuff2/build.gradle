// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        hilt_version = "2.39.1"
        room_version = "2.4.1"
        lifecycle_version = "2.4.1"
        coroutines_version = "1.5.2"
        retrofit_version = "2.9.0"
        hilt_version = "2.39.1"
        hilt_tests_version = "2.28-alpha"
        recyclerview_test_version = "3.4.0"
        truth_version = "1.1.3"
        arc_core_tests_version = "2.1.0"
        coroutine_tests_version = "1.5.0"
        junit_tests_version = "4.13.2"
        mockito_tests_version = "3.11.2"
        mockito_android_version = "2.19.0"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// For plugin id kotlin-parcelize
plugins {
    id "org.jetbrains.kotlin.android" version '1.6.10' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// .editorconfig stuff

// # indicate this is the root of the project
// # https://stackoverflow.com/questions/44694132/editorconfig-in-android-studio
// # Enable EditorConfig support (Settings → Editor → Code Style → Enable EditorConfig support)
// root = true
//
// [*.{kt,kts}]
// charset = utf-8
// indent_style = space
// indent_size=unset
// max_line_length=400
// trim_trailing_whitespace = true
// insert_final_newline = true
// disabled_rules = import-ordering
//
// # lf is a line break. Used in Linux. lf means Line Feed. On Windows and old Macs there is CR which is Carriage Return. Both of them indicate line breaks.
// # https://stackoverflow.com/questions/1552749/difference-between-cr-lf-lf-and-cr-line-break-types
// end_of_line = lf